DESIGN DOCUMENT: Player Implementation for Three Trios
To support both human and AI players in the future,
the Player interface should be designed to abstract the decision-making process for moves.

To support both human and AI players, I propose designing a flexible Player interface that will
define the basic operations all players must implement, regardless of type. We've already created a
rough interface for the player, including actions that we think would be beneficial in future assignments.
This is tentative, and bound to change.


This interface will include methods such as getColor() for determining the playerâ€™s cikir and getHand()
to retrieve player-specific details.

The Player interface can then be implemented by concrete classes, such as HumanPlayer and AIPlayer,
allowing for different logic to be applied based on player type.
  - The HumanPlayer would interact with user input to make moves.
  - The AIPlayer would use algorithms to decide on actions.

The game model will maintain a collection of Player objects, iterating through each player's turn,
enabling either human, AI, or mixed play scenarios. This setup ensures that additional player types,
such as advanced AI, can be added easily in future assignments without modifying the game logic,
thereby keeping the code modular and extendable.